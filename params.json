{"name":"easyJSON","tagline":"An easy to use and light-weight library for creating JSON in java.","body":"easyJSON\r\n========\r\n\r\nAn easy to use and light-weight library for creating JSON in java.\r\n\r\nUPDATES\r\n=======\r\n\r\nVersion: 1.1 | \r\nUpdated On: 14 February 2014 |\r\nDescription: Support for Java Objects\r\n\r\nINFORMATION\r\n===========\r\n\r\nAuthor: Yuvraj Singh Babrah |\r\nVersion: 1.0 |\r\nRelease Date: 28 November 2013\r\n\r\nINSTRUCTIONS\r\n============\r\n\r\n1. Include the easyJSON package in the same path as that of your class files of a JAVA program.\r\n2. Type \"import easyJSON.*\" (Basic Step)\r\n3. A new json object will be created by instantiating the easyJSON class as follows: easyJSON json = new easyJSON();\r\n4. To add key-value pairs simply use the add(String key, Object value) method as follows: json.add(\"Name\", \"Yuvraj Singh Babrah\"); json.add(\"Age\", 21); The key-value pairs are in accordance to the json rules laid out on http://json.org\r\n5. To retrieve a value, use the get(String key) method as follows: json.get(\"Name\"); The key should be in quotes. The return value, if of type String, will be without the quotes.\r\n6. To remove a key-value pair, use the remove method(String key).\r\n7. To instantiate the json array object use the easyJSONArray Constructor easyJSONArray array = new easyJSONArray();\r\n8. To add elements, use the add(Object value) method.\r\n9. To retreive the value, use the get(int key) method.\r\n10. To remove an element, use the remove(_) method which takes either index or Object as a paramenter.\r\n\r\n\r\nCONTACT\r\n=======\r\n\r\nIf you find any bug or feel that some feature is missing shoot me a mail on yuvrajb@users.noreply.github.com or direct message me on facebook: https://facebook.com/yuvraj.babrah | twitter: https://twitter.com/yuvrajb | visit: http://yuvrajbabrah.eu5.org\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}